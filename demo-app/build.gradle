apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'

android {
    compileSdk 35

    namespace = "com.worldpay.access.checkout.sample"

    buildFeatures {
        buildConfig = true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    defaultConfig {
        applicationId "com.worldpay.access.checkout.sample"
        minSdkVersion 26
        targetSdkVersion 35
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions = ["environment"]
    productFlavors {
        register("mock") {
            dimension = "environment"
            applicationIdSuffix = ".mock"
            manifestPlaceholders = [displayName: "Access Checkout - Mock Demo App"]
        }

        register("prod") {
            dimension = "environment"
            applicationIdSuffix = ".prod"
            manifestPlaceholders = [displayName: "Access Checkout - Prod Demo App"]
        }
    }

    applicationVariants.configureEach { variant ->
        variant.buildConfigField "String", "CHECKOUT_ID", checkoutId
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled = true
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation project(':access-checkout')
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    debugImplementation "androidx.tracing:tracing:${versions['tracing']}"

    implementation "com.google.android.gms:play-services-vision:${versions['play-services-vision']}"

    implementation "com.google.guava:guava:${versions['guava']}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions['kotlin']}"

    implementation "androidx.appcompat:appcompat:${versions['appcompat']}"
    implementation "androidx.constraintlayout:constraintlayout:${versions['constraintlayout']}"
    implementation "androidx.navigation:navigation-fragment-ktx:${versions['navigation-fragment-ktx']}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions['navigation-ui-ktx']}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions['lifecycle-extensions']}"
    implementation "com.squareup.okhttp3:okhttp:${versions['okhttp3']}"
    implementation "org.conscrypt:conscrypt-android:${versions['conscrypt-android']}"
    implementation "com.caverock:androidsvg-aar:${versions['androidsvg-aar']}"

    implementation "com.google.android.material:material:${versions['material']}"

    mockImplementation "androidx.test.espresso:espresso-core:${versions['espresso']}"
    mockImplementation "org.apache.httpcomponents:httpclient-android:${versions['httpclient-android']}"
    mockImplementation "com.google.code.gson:gson:${versions['gson']}"
    mockImplementation("com.github.tomakehurst:wiremock:${versions['com.github.tomakehurst:wiremock']}") {
        // Allows us to use the Android version of Apache httpclient instead
        exclude group: "org.apache.httpcomponents", module: "httpclient"
    }

    testImplementation "junit:junit:${versions['junit']}"
    testImplementation "com.github.java-json-tools:json-schema-validator:${versions['json-schema-validator']}"
    testImplementation "org.mockito.kotlin:mockito-kotlin:${versions['mockito-kotlin']}"

    androidTestImplementation "org.jetbrains.kotlin:kotlin-test:${versions['kotlin']}"
    androidTestImplementation "androidx.test.ext:junit:${versions['androidx.test.ext:junit']}"
    androidTestImplementation "androidx.test:rules:${versions['test-rules']}"

    androidTestImplementation "androidx.test.uiautomator:uiautomator:${versions['uiautomator']}"

    androidTestImplementation "androidx.test.espresso:espresso-accessibility:${versions['espresso']}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions['espresso']}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${versions['espresso']}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${versions['espresso']}"
    androidTestImplementation "androidx.test.espresso:espresso-web:${versions['espresso']}"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:${versions['espresso']}"

    androidTestImplementation "org.awaitility:awaitility-kotlin:${versions['awaitility-kotlin']}"

    androidTestUtil "androidx.test:orchestrator:${versions['orchestrator']}"
}
