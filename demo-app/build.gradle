apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'

android {
    compileSdk 35

    namespace = "com.worldpay.access.checkout.sample"

    buildFeatures {
        buildConfig = true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    defaultConfig {
        applicationId "com.worldpay.access.checkout.sample"
        minSdkVersion 26
        targetSdkVersion 35
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions = ["environment"]
    productFlavors {
        register("mock") {
            dimension = "environment"
            applicationIdSuffix = ".mock"
            manifestPlaceholders = [displayName: "Access Checkout - Mock Demo App"]
        }

        register("prod") {
            dimension = "environment"
            applicationIdSuffix = ".prod"
            manifestPlaceholders = [displayName: "Access Checkout - Prod Demo App"]
        }
    }

    applicationVariants.configureEach { variant ->

        if (variant.name.contains("mock")) {
            variant.buildConfigField "String", "CHECKOUT_ID", "\"AUTOMATED-TEST\""
        } else if (variant.name.contains("prod")) {
            variant.buildConfigField "String", "CHECKOUT_ID", "${project.checkoutId}"
        }
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled = true
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation project(':access-checkout')
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    debugImplementation("androidx.tracing:tracing:1.1.0")

    implementation 'com.google.android.gms:play-services-vision:20.1.3'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.21"
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.9.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.9.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'org.conscrypt:conscrypt-android:2.5.1'
    implementation 'com.caverock:androidsvg-aar:1.4'

    implementation 'com.google.android.material:material:1.12.0'


    mockImplementation "androidx.test.espresso:espresso-core:3.6.1"
    mockImplementation 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    mockImplementation 'com.google.code.gson:gson:2.13.1'
    mockImplementation("com.github.tomakehurst:wiremock:2.22.0") {
//        Allows us to use the Android version of Apache httpclient instead
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.github.java-json-tools:json-schema-validator:2.2.10'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"

    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test:rules:1.6.1'

    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'

    androidTestImplementation "androidx.test.espresso:espresso-core:3.6.1"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.6.1"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.6.1"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:3.6.1"
    androidTestImplementation "androidx.test.espresso:espresso-web:3.6.1"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:3.6.1"

    androidTestImplementation 'org.awaitility:awaitility-kotlin:3.1.6'

    androidTestUtil 'androidx.test:orchestrator:1.5.1'
}
