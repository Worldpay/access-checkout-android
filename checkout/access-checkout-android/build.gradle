buildscript {
    ext.dokka_version = '0.9.18'
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$dokka_version"
        classpath "org.jacoco:org.jacoco.core:0.8.3"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.0"
    }
}


apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

apply from: './jacoco.gradle'
apply from: './javadoc.gradle'

apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: nexusUrl) {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: nexusSnapshotUrl) {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.version = "${project.version}"
            pom.artifactId = "access-checkout-android"
            pom.groupId = "com.worldpay.access"

            pom.project {
                name 'Worldpay Access Checkout Android SDK'
                packaging 'aar'

                description 'Android SDK library for Worldpay Access Checkout.'
                url 'https://github.com/Worldpay/access-checkout-android'

                scm {
                    connection 'scm:git:git://github.com/Worldpay/access-checkout-android.git'
                    developerConnection 'scm:git:ssh://github.com/Worldpay/access-checkout-android.git'
                    url 'https://github.com/Worldpay/access-checkout-android/tree/master'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://raw.githubusercontent.com/Worldpay/access-checkout-android/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'worldpay'
                        name 'Worldpay'
                        organization = 'Worldpay'
                        organizationUrl 'https://www.worldpay.com/'
                    }
                }
            }
        }
    }
}

nexusStaging {
    packageGroup = "com.worldpay.access"
    stagingProfileId = "com.worldpay"
}

artifacts {
    archives javadocJar, sourcesJar
}


android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            debuggable false
            zipAlignEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled = true
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }

        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

}

afterEvaluate {
    def filePrefix = "$buildDir/outputs/aar/$archivesBaseName"
    def fileSuffix = "aar"
    def originalFile = file("$filePrefix-release.$fileSuffix")
    def renamedFile = "$filePrefix-$version.$fileSuffix"
    tasks.named("assembleRelease").configure {
        doLast {
            originalFile.renameTo(renamedFile)
        }
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'org.mockito:mockito-android:2.24.5'
    androidTestImplementation("com.github.tomakehurst:wiremock:2.22.0") {
        //Allows us to use the Android version of Apache httpclient instead
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'

        //Resolves the Duplicate Class Exception
        //duplicate entry: org/objectweb/asm/AnnotationVisitor.class
        exclude group: 'asm', module: 'asm'

        //Fixes Warning conflict with Android's version of org.json
        //org.json:json:20090211 is ignored for debugAndroidTest as it may be conflicting with the internal version provided by Android.
        exclude group: 'org.json', module: 'json'
    }

    androidTestImplementation 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    androidTestImplementation 'org.awaitility:awaitility-kotlin:3.1.6'

    testImplementation 'org.awaitility:awaitility-kotlin:3.1.6'
    testImplementation 'junit:junit:4.12'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testImplementation "org.robolectric:robolectric:4.0"
    testImplementation 'au.com.dius:pact-jvm-consumer-junit_2.12:3.6.2'
}
repositories {
    mavenCentral()
}
