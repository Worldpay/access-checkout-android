apply plugin: 'maven'
apply plugin: 'io.codearte.nexus-staging'

if (project.hasProperty("signing.keyId")) {
    apply plugin: 'signing'
    signing {
        sign configurations.archives
    }
}

uploadArchives {
    repositories {
        mavenDeployer {

            beforeDeployment { MavenDeployment deployment -> signing.sign(deployment) }

            repository(url: nexusUrl) {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: nexusSnapshotUrl) {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.version = "${project.version}"
            pom.artifactId = "access-checkout-android"
            pom.groupId = "com.worldpay.access"

            pom.project {
                name 'Worldpay Access Checkout Android SDK'
                packaging 'aar'

                description 'Android SDK library for Worldpay Access Checkout.'
                url 'https://github.com/Worldpay/access-checkout-android'

                scm {
                    connection 'scm:git:git://github.com/Worldpay/access-checkout-android.git'
                    developerConnection 'scm:git:ssh://github.com/Worldpay/access-checkout-android.git'
                    url 'https://github.com/Worldpay/access-checkout-android/tree/master'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://raw.githubusercontent.com/Worldpay/access-checkout-android/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'worldpay'
                        name 'Worldpay'
                        organization = 'Worldpay'
                        organizationUrl 'https://www.worldpay.com/'
                    }
                }
            }
        }
    }
}

nexusStaging {
    packageGroup = "com.worldpay"
}

artifacts {
    archives javadocJar, sourcesJar
}