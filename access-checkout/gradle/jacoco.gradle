apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.7'
}

def fileFilter = [
        '**/R.class',
        '**/R$*.class',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*Test*.*',
        'android/**/*.*',
        '**/logging/LoggingUtils*',
        '**/logging/AccessCheckoutLogger*'
]
def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    executionData.from = files("$project.projectDir/jacoco.exec")
    classDirectories.setFrom(files([debugTree], [kotlinDebugTree]))
    sourceDirectories.setFrom(files(["${project.projectDir}/src/main/java"]))

    reports {
        html.enabled true
    }
}

task jacocoTestCoverageVerification(type: JacocoCoverageVerification, dependsOn: 'jacocoTestReport') {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                minimum = 1.0
            }
        }
    }
}
